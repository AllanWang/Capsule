apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

//group = 'ca.allanwang'
//version = project.versionName

android {
    compileSdkVersion project.targetSdk
    buildToolsVersion project.buildTools

    defaultConfig {
        minSdkVersion project.minSdk
        targetSdkVersion project.targetSdk
        versionCode project.versionCode
        versionName project.versionName
        consumerProguardFiles 'progress-proguard.txt'
    }
    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:appcompat-v7:$project.androidSupportLibs"
    compile "com.android.support:support-v4:$project.androidSupportLibs"
    compile "com.android.support:design:$project.androidSupportLibs"
    compile "com.android.support:recyclerview-v7:$project.androidSupportLibs"
    compile "com.android.support:cardview-v7:$project.androidSupportLibs"
    compile "com.android.support:preference-v14:$project.androidSupportLibs"

    //Decoupled events
    compile 'org.greenrobot:eventbus:3.0.0'

    //Logging
    compile 'com.jakewharton.timber:timber:4.5.1'

    //Dialog
    compile 'com.afollestad.material-dialogs:core:0.9.2.3'

    //Recyclerview animations
    compile 'jp.wasabeef:recyclerview-animators:2.2.5'

    //Drawer
    compile('com.mikepenz:materialdrawer:5.8.1@aar') {
        transitive = true
    }

    //Icons
    compile "com.mikepenz:iconics-core:2.8.2@aar"
    compile 'com.mikepenz:google-material-typeface:2.2.0.3.original@aar'
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}