apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

android {
    compileSdkVersion Integer.parseInt(project.TARGET_SDK)
    buildToolsVersion project.BUILD_TOOLS

    defaultConfig {
        minSdkVersion Integer.parseInt(project.MIN_SDK)
        targetSdkVersion Integer.parseInt(project.TARGET_SDK)
        versionCode Integer.parseInt(project.VERSION_CODE)
        versionName project.VERSION_NAME
        consumerProguardFiles 'progress-proguard.txt'
    }
    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }
    resourcePrefix "capsule_"
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:appcompat-v7:${ANDROID_SUPPORT_LIBS}"
    compile "com.android.support:support-v4:${ANDROID_SUPPORT_LIBS}"
    compile "com.android.support:support-v13:${ANDROID_SUPPORT_LIBS}"
    compile "com.android.support:design:${ANDROID_SUPPORT_LIBS}"
    compile "com.android.support:recyclerview-v7:${ANDROID_SUPPORT_LIBS}"
    compile "com.android.support:cardview-v7:${ANDROID_SUPPORT_LIBS}"
    compile "com.android.support:preference-v14:${ANDROID_SUPPORT_LIBS}"

    //Decoupled events
    compile 'org.greenrobot:eventbus:3.0.0'

    //Logging
    compile 'com.jakewharton.timber:timber:4.5.1'

    //Dialog
    compile 'com.afollestad.material-dialogs:core:0.9.4.3'

    //Drawer
    compile('com.mikepenz:materialdrawer:5.9.0@aar') {
        transitive = true
    }

    //Icons
    compile "com.mikepenz:iconics-core:2.8.3@aar"
    compile 'com.mikepenz:google-material-typeface:3.0.1.0.original@aar'

    //FastAdapter
    compile('com.mikepenz:fastadapter:2.1.7@aar') {
        transitive = true
    }
    compile 'com.mikepenz:fastadapter-commons:2.1.0@aar'

    //The tiny Materialize library used for its useful helper classes
    compile 'com.mikepenz:materialize:1.0.0@aar'
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}